MongoDB has application-schema driven database and even MongoDB supports 3rd Normal form same as that in Relational Databases
MongoDB has several advantages like
DOcument rich database
MongoDB doesn't support joins inside the kernel.Instead we can join the documents by using embedded documents
(Joins are hard to scale and it affects the performance)
It doesnot support Transactions and instead it supports atomic operations 
It doesn't have any constraints like Foreign key constraint as it is in relational databases
MongoDB is schemaless It doesn't have schema like Relational databases where we have to alter the table accordingly when a new parameter is to be added to the table.


***********************Advntages of Normalization*******************
1. Free the database from modification anamolies
2.Minimize redesign when extending the database
3.Aviod any bias to any particular design access patterns
************************************

MongoDB does not support transactions.Eventhought it doesn't support transactions it does the same thing as that of transactions by making the all changes given or none of them which is the same as transactions and it supports ACID (Atomicity,Consistency,Isolation and Durability) 

The ways to overcome the lack of transactions in MongoDB are:-
1. Restructuring the document so that everything happens in a single document
2.using some external code or software that facilitates the locking mechanism so that the purpose of transaction can be achieved.
3. Tolerate some level of inconsitency-- Facebook feed not the same across all the users

One to One relations
Each item corresponds to another item
We can keep the employee and resume as two different documents in different collection and we can link both of the documents byusing the _id field.
When we ahve to go by splitting rather than embedding:-
Frequency of access --- 
Growing size of the working set
If the order document size is greater than 16MB
Atomicity of data and evven 0% tolerance to inconsistency


*******Benefits of Embedding ******************
Improve read performance
One trip round to the DB

